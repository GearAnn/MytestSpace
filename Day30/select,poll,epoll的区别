

1. select
select通过一个select()系统调用来监视多个文件描述符（socket对象）的数组，当select()返回后，该数组中就绪的文件描述符便会被内核修改标志位，
使得进程可以获得这些文件描述符从而进行读写操作。属于水平触发。

select体现了事件驱动的思想，可以在所有平台上使用。

缺点：单个进程监视文件描述符有限量，在Linux上为1024，但可以修改内核来提升。
     select()对文件描述符的复制开销会增长，select()对socket的扫描也会浪费开销。


2.poll
poll和select本质上没有区别，但是poll没有文件描述符最大量的限制。


3.epoll
epoll是Linux下性能最好的多路IO就绪通知方法。windows不支持。没有文件描述符最大量的限制。属于边缘触发和水平触发。

优点：相比于select循环时的全盘监听，epoll可以精确定位文件描述符（socket对象）数据的接收。


总结：select,poll,epoll本质上就是3种不同的监听传输数据的方式，而数据的传输更新本质上是文件描述符的更新。