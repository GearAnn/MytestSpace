#!/usr/bin/python
# coding: utf-8

"""
@version: Python3
@author: Ann
@contact: 494792590@qq.com
@software: Pycharm
@file: yield实现的协程.py
@time: 2018/10/11 0011 上午 1:55
"""

"""
协程(Coroutine)，又叫微线程，纤程。协程是一种用户态的轻量级线程。
协程拥有自己的寄存器上下和栈。协程调度切换时，寄存器上下文和栈保存到其他地方，在切回来的时候，恢复先前保存的上下文和栈。
因此，协程能保留上一次调用时的状态（即所有局部状态的一个特定组合），每次过程重写时，就相当于上一次状态的调用（即进入上一次离开时的逻辑流的位置）。

协程的好处：
1.无需线程上下文切换的开销
2.无需原子操作锁定及同步的开销
3.方便切换控制流，简化编程模型
4.高并发+高扩展性+低成本：一个CPU可以支持上万的协程。所以很适合高并发处理

协程的缺点：
1.无法利用多核资源：协程的本质是单线程，它不能同时将单个CPU的多个核用上，协程需要和进程配合才能运行在多CPU上。
  当然除非是CPU密集型应用。（通过多进程+协程来利用多核CPU来解决）
2.进行阻塞（blocking）操作（如IO时）会阻塞掉整个程序


协程的最大优势就是：几乎可以完全替代多线程，可以通过多进程+协程来利用多核CPU。
"""

# FIXME yield支持下的协程

import time
import queue


def consumer(name):   # 这只是一个生成器 因为有yield
    print('--->starting...')
    while True:
        new_baozi = yield
        print('[%s] is eating baozi %s' % (name, new_baozi))


def producer():
    con.__next__()  # 等同于next(con)
    con2.__next__()  # 等同于next(con2)
    n = 0
    while n < 5:
        n += 1
        con.send(n)  # 发送的值n 等于yield的返回值 new_baozi
        con2.send(n)
        print('\033[32;1m[producer]\033[0m is making baozi %s]' % n)  # 这句备注在后面


if __name__ == '__main__':   # 代码从这里开始执行
    con = consumer('c1')    # 创建生成器对象 con
    con2 = consumer('c2')   # 创建生成器对象 con2
    p = producer()  # 执行producer函数,p就是函数返回值


"""
格式: echo -e "\033[字背景颜色;字体颜色m字符串\033[0m" 

例如: 
echo -e "\033[41;36m something here \033[0m" 

其中41的位置代表底色, 36的位置是代表字的颜色 


那些ascii code 是对颜色调用的始末. 
\033[ ; m …… \033[0m 


字背景颜色范围:40----49 
40:黑 
41:深红 
42:绿 
43:黄色 
44:蓝色 
45:紫色 
46:深绿 
47:白色 

字颜色:30-----------39 
30:黑 
31:红 
32:绿 
33:黄 
34:蓝色 
35:紫色 
36:深绿 
37:白色 

===============================================ANSI控制码的说明 
\33[0m 关闭所有属性 
\33[1m 设置高亮度 
\33[4m 下划线 
\33[5m 闪烁 
\33[7m 反显 
\33[8m 消隐 
\33[30m -- \33[37m 设置前景色 
\33[40m -- \33[47m 设置背景色 
\33[nA 光标上移n行 
\33[nB 光标下移n行 
\33[nC 光标右移n行 
\33[nD 光标左移n行 
\33[y;xH设置光标位置 
\33[2J 清屏 
\33[K 清除从光标到行尾的内容 
\33[s 保存光标位置 
\33[u 恢复光标位置 
\33[?25l 隐藏光标 
\33[?25h 显示光标

"""